;
; File generated by cc65 v 2.16 - Git N/A
;
	.fopt		compiler,"cc65 v 2.16 - Git N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "digger.c", 29719, 1522771547
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/stdint.h", 6196, 1519303289
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/c64.h", 6729, 1519303281
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/_vic2.h", 10835, 1519303279
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/_sid.h", 3626, 1519303278
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/_6526.h", 3962, 1519303277
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/cbm.h", 10858, 1519303281
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/stddef.h", 3057, 1519303289
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/cbm_filetype.h", 4949, 1519303282
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/stdbool.h", 2506, 1519303289
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/stdlib.h", 5748, 1519303289
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/stdio.h", 6186, 1519303289
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/stdarg.h", 2913, 1519303289
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/time.h", 5672, 1519303291
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/peekpoke.h", 3108, 1519303288
	.dbg		file, "/usr/local/google/home/sborodavkin/cc65-2.16/include/string.h", 5041, 1519303290
	.dbg		file, "digger.h", 13311, 1522743878
	.dbg		file, "charset.h", 7790, 1523024027
	.dbg		file, "monster.h", 4509, 1522770787
	.dbg		file, "gold.h", 3905, 1523024898
	.dbg		file, "mapcoll.h", 441, 1523025000
	.dbg		file, "bullet.h", 1935, 1522415059
	.dbg		file, "non_gameplay.h", 2508, 1522153567
	.forceimport	__STARTUP__
	.dbg		sym, "cbm_k_getin", "00", extern, "_cbm_k_getin"
	.dbg		sym, "sprintf", "00", extern, "_sprintf"
	.dbg		sym, "clock", "00", extern, "_clock"
	.dbg		sym, "memcpy", "00", extern, "_memcpy"
	.dbg		sym, "play_popcorn", "00", extern, "_play_popcorn"
	.dbg		sym, "play_sfx_eat", "00", extern, "_play_sfx_eat"
	.dbg		sym, "play_sfx_eat_gold", "00", extern, "_play_sfx_eat_gold"
	.dbg		sym, "sid_reset", "00", extern, "_sid_reset"
	.dbg		sym, "disable_nmi", "00", extern, "_disable_nmi"
	.dbg		sym, "LEVEL_ART", "00", extern, "_LEVEL_ART"
	.dbg		sym, "LEVEL_ART_PEN_COLOR", "00", extern, "_LEVEL_ART_PEN_COLOR"
	.dbg		sym, "load_wobble_gold_chars", "00", extern, "_load_wobble_gold_chars"
	.dbg		sym, "unload_wobble_gold_chars", "00", extern, "_unload_wobble_gold_chars"
	.dbg		sym, "backup_alphabet", "00", extern, "_backup_alphabet"
	.dbg		sym, "WALK_STEP32_MONSTER", "00", extern, "_WALK_STEP32_MONSTER"
	.dbg		sym, "init_monsters", "00", extern, "_init_monsters"
	.dbg		sym, "spawn_monster", "00", extern, "_spawn_monster"
	.dbg		sym, "update_monsters", "00", extern, "_update_monsters"
	.dbg		sym, "num_gold", "00", extern, "_num_gold"
	.dbg		sym, "num_gold_exist", "00", extern, "_num_gold_exist"
	.dbg		sym, "gold_falling_step", "00", extern, "_gold_falling_step"
	.dbg		sym, "init_gold", "00", extern, "_init_gold"
	.dbg		sym, "push_gold", "00", extern, "_push_gold"
	.dbg		sym, "update_gold", "00", extern, "_update_gold"
	.dbg		sym, "turnoff_gold_animation", "00", extern, "_turnoff_gold_animation"
	.dbg		sym, "bullet_direction", "00", extern, "_bullet_direction"
	.dbg		sym, "bullet_step", "00", extern, "_bullet_step"
	.dbg		sym, "is_bullet", "00", extern, "_is_bullet"
	.dbg		sym, "can_shoot", "00", extern, "_can_shoot"
	.dbg		sym, "shoot_bullet", "00", extern, "_shoot_bullet"
	.dbg		sym, "update_bullet", "00", extern, "_update_bullet"
	.dbg		sym, "wait_for_key", "00", extern, "_wait_for_key"
	.dbg		sym, "clear_kbd_buffer", "00", extern, "_clear_kbd_buffer"
	.dbg		sym, "intro", "00", extern, "_intro"
	.dbg		sym, "ending", "00", extern, "_ending"
	.dbg		sym, "statusbar_redraw_score", "00", extern, "_statusbar_redraw_score"
	.dbg		sym, "statusbar_redraw_lives", "00", extern, "_statusbar_redraw_lives"
	.dbg		sym, "statusbar_redraw_level", "00", extern, "_statusbar_redraw_level"
	.dbg		sym, "draw_string_at", "00", extern, "_draw_string_at"
	.dbg		sym, "draw_1x1_string_at", "00", extern, "_draw_1x1_string_at"
	.import		_cbm_k_getin
	.import		_sprintf
	.import		_clock
	.import		_memcpy
	.export		_step
	.export		_NUM_SPAWNS
	.export		_global_clock
	.export		_bonus_mode_state
	.export		_num_killed_monsters
	.export		_last_bonus_clock
	.export		_digger_x
	.export		_digger_y
	.export		_digger_x_offset
	.export		_digger_y_offset
	.export		_sprite_1
	.export		_sprite_2
	.export		_reset_sprite_after_first_key
	.export		_num_monsters_alive
	.export		_num_lives
	.export		_current_level
	.export		_num_emeralds_left
	.export		_total_score
	.export		_spawn_x
	.export		_spawn_y
	.export		_map
	.export		_sid_index
	.export		_unlimited_lives
	.export		_invincibility
	.export		_shoot_without_delay
	.export		_can_skip_levels
	.export		_override_level_start
	.export		_setup_sprites
	.export		_prepare_game
	.export		_poll_keyboard
	.export		_poll_joystik
	.export		_clear_screen
	.export		_draw_tile
	.export		_draw_emerald
	.export		_draw_gold
	.export		_draw_gold_on_blank
	.export		_draw_brokengold
	.export		_draw_bonus
	.export		_draw_map
	.export		_field_xy_to_offset
	.export		_flash_screen
	.export		_main
	.export		_adjust_game_step
	.export		_clear_tile
	.export		_level_complete
	.export		_eat_tile
	.export		_place_digger
	.export		_adjust_digger_pos
	.export		_move_digger
	.export		_get_digger_sprite_num
	.export		_kill_digger_and_restart
	.import		_play_popcorn
	.import		_play_sfx_eat
	.import		_play_sfx_eat_gold
	.import		_sid_reset
	.import		_disable_nmi
	.import		_LEVEL_ART
	.import		_LEVEL_ART_PEN_COLOR
	.import		_load_wobble_gold_chars
	.import		_unload_wobble_gold_chars
	.import		_backup_alphabet
	.import		_WALK_STEP32_MONSTER
	.import		_init_monsters
	.import		_spawn_monster
	.import		_update_monsters
	.import		_num_gold
	.import		_num_gold_exist
	.import		_gold_falling_step
	.import		_init_gold
	.import		_push_gold
	.import		_update_gold
	.import		_turnoff_gold_animation
	.import		_bullet_direction
	.import		_bullet_step
	.import		_is_bullet
	.import		_can_shoot
	.import		_shoot_bullet
	.import		_update_bullet
	.import		_wait_for_key
	.import		_clear_kbd_buffer
	.import		_intro
	.import		_ending
	.import		_statusbar_redraw_score
	.import		_statusbar_redraw_lives
	.import		_statusbar_redraw_level
	.import		_draw_string_at
	.import		_draw_1x1_string_at

.segment	"DATA"

_NUM_SPAWNS:
	.byte	$00
_num_monsters_alive:
	.byte	$00
_unlimited_lives:
	.byte	$00
_invincibility:
	.byte	$00
_shoot_without_delay:
	.byte	$00
_can_skip_levels:
	.byte	$00
_override_level_start:
	.byte	$00

.segment	"RODATA"

L0571:
	.byte	$D0,$D2,$C5,$D3,$D3,$20,$D3,$D0,$C1,$C3,$C5,$20,$CF,$D2,$20,$C6
	.byte	$C9,$D2,$C5,$20,$D4,$CF,$20,$D0,$CC,$C1,$D9,$20,$C1,$C7,$C1,$C9
	.byte	$CE,$00
L053E:
	.byte	$20,$20,$20,$20,$20,$20,$C7,$C1,$CD,$C5,$20,$CF,$D6,$C5,$D2,$20
	.byte	$20,$20,$20,$20,$00
L0544:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$00
L0550	:=	L0544+0
L0556	:=	L0544+0
L055C	:=	L0544+0
L0538	:=	L0544+0
L0530:
	.byte	$D9,$CF,$D5,$20,$D3,$C3,$CF,$D2,$C5,$C4,$20,$25,$30,$36,$4C,$55
	.byte	$00

.segment	"BSS"

.segment	"BSS"
_step:
	.res	1,$00
.segment	"BSS"
_global_clock:
	.res	4,$00
.segment	"BSS"
_bonus_mode_state:
	.res	1,$00
.segment	"BSS"
_num_killed_monsters:
	.res	1,$00
.segment	"BSS"
_last_bonus_clock:
	.res	4,$00
.segment	"BSS"
_digger_x:
	.res	1,$00
.segment	"BSS"
_digger_y:
	.res	1,$00
.segment	"BSS"
_digger_x_offset:
	.res	1,$00
.segment	"BSS"
_digger_y_offset:
	.res	1,$00
.segment	"BSS"
_sprite_1:
	.res	1,$00
.segment	"BSS"
_sprite_2:
	.res	1,$00
.segment	"BSS"
_reset_sprite_after_first_key:
	.res	1,$00
.segment	"BSS"
_num_lives:
	.res	1,$00
.segment	"BSS"
_current_level:
	.res	1,$00
.segment	"BSS"
_num_emeralds_left:
	.res	1,$00
.segment	"BSS"
_total_score:
	.res	4,$00
.segment	"BSS"
_spawn_x:
	.res	1,$00
.segment	"BSS"
_spawn_y:
	.res	1,$00
.segment	"BSS"
_map:
	.res	150,$00
.segment	"BSS"
_sid_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ setup_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_setup_sprites: near

	.dbg	func, "setup_sprites", "00", extern, "_setup_sprites"

.segment	"CODE"

	.dbg	line, "digger.c", 69
	lda     #$FF
	sta     $D01C
	.dbg	line, "digger.c", 70
	lda     #$02
	sta     $D025
	.dbg	line, "digger.c", 71
	lda     #$07
	sta     $D026
	.dbg	line, "digger.c", 72
	lda     #$05
	sta     $D027
	.dbg	line, "digger.c", 73
	lda     #$07
	sta     $D028
	.dbg	line, "digger.c", 74
	lda     #$01
	sta     $D029
	.dbg	line, "digger.c", 75
	lda     #$05
	sta     $D02A
	.dbg	line, "digger.c", 76
	sta     $D02B
	.dbg	line, "digger.c", 77
	sta     $D02C
	.dbg	line, "digger.c", 78
	sta     $D02D
	.dbg	line, "digger.c", 79
	sta     $D02E
	.dbg	line, "digger.c", 80
	rts
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ prepare_game (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_prepare_game: near

	.dbg	func, "prepare_game", "00", extern, "_prepare_game"
	.dbg	sym, "reset_all", "00", auto, 1
	.dbg	sym, "advance_to_next_level", "00", auto, 0
	.dbg	sym, "map_index", "00", auto, -1

.segment	"CODE"

	.dbg	line, "digger.c", 659
	jsr     pusha
	.dbg	line, "digger.c", 663
	jsr     decsp1
	lda     #$00
	sta     $D015
	.dbg	line, "digger.c", 665
	lda     _current_level
	cmp     #$FF
	bne     L081C
	ldy     #$01
	lda     (sp),y
	beq     L081C
	.dbg	line, "digger.c", 666
	jsr     _ending
	.dbg	line, "digger.c", 667
	lda     #$00
	sta     _current_level
	.dbg	line, "digger.c", 668
	sta     _total_score
	sta     _total_score+1
	sta     _total_score+2
	sta     _total_score+3
	.dbg	line, "digger.c", 669
	lda     #$03
	sta     _num_lives
	.dbg	line, "digger.c", 673
L081C:	lda     _current_level
	.dbg	line, "digger.c", 680
	beq     L081D
	cmp     #$01
	beq     L081E
	cmp     #$02
	beq     L081F
	cmp     #$03
	beq     L0821
	cmp     #$04
	beq     L0822
	jmp     L0823
	.dbg	line, "digger.c", 674
L081D:	lda     #$02
	sta     _NUM_SPAWNS
	lda     #$0A
	jmp     L0818
	.dbg	line, "digger.c", 675
L081E:	lda     #$02
	sta     _NUM_SPAWNS
	lda     #$0A
	jmp     L0818
	.dbg	line, "digger.c", 676
L081F:	lda     #$03
	sta     _NUM_SPAWNS
	lda     #$08
	jmp     L0818
	.dbg	line, "digger.c", 677
L0821:	sta     _NUM_SPAWNS
	lda     #$08
	jmp     L0818
	.dbg	line, "digger.c", 678
L0822:	lda     #$03
	sta     _NUM_SPAWNS
	lda     #$06
	jmp     L0818
	.dbg	line, "digger.c", 679
L0823:	lda     #$04
	sta     _NUM_SPAWNS
L0818:	sta     _WALK_STEP32_MONSTER
	.dbg	line, "digger.c", 682
	lda     #$01
	sta     _step
	.dbg	line, "digger.c", 683
	lda     #$03
	sta     _bullet_step
	.dbg	line, "digger.c", 684
	sta     _gold_falling_step
	.dbg	line, "digger.c", 685
	lda     #$01
	sta     _can_shoot
	.dbg	line, "digger.c", 686
	lda     #$00
	sta     _is_bullet
	.dbg	line, "digger.c", 687
	sta     _bullet_direction
	.dbg	line, "digger.c", 688
	lda     #$07
	sta     _digger_x
	.dbg	line, "digger.c", 689
	lda     #$09
	sta     _digger_y
	.dbg	line, "digger.c", 690
	lda     #$0E
	sta     _spawn_x
	.dbg	line, "digger.c", 691
	lda     #$00
	sta     _spawn_y
	.dbg	line, "digger.c", 692
	sta     _digger_x_offset
	.dbg	line, "digger.c", 693
	sta     _digger_y_offset
	.dbg	line, "digger.c", 694
	sta     _bonus_mode_state
	.dbg	line, "digger.c", 695
	sta     $D021
	.dbg	line, "digger.c", 696
	sta     $D020
	.dbg	line, "digger.c", 697
	sta     _last_bonus_clock
	sta     _last_bonus_clock+1
	sta     _last_bonus_clock+2
	sta     _last_bonus_clock+3
	.dbg	line, "digger.c", 698
	sta     _num_killed_monsters
	.dbg	line, "digger.c", 699
	jsr     _clock
	sta     _global_clock
	stx     _global_clock+1
	ldy     sreg
	sty     _global_clock+2
	ldy     sreg+1
	sty     _global_clock+3
	.dbg	line, "digger.c", 700
	jsr     _init_monsters
	.dbg	line, "digger.c", 701
	lda     #$00
	sta     _num_monsters_alive
	.dbg	line, "digger.c", 704
	tax
	lda     _current_level
	cmp     #$0D
	bcs     L0824
	.dbg	line, "digger.c", 706
	jmp     L0829
	.dbg	line, "digger.c", 707
L0824:	lda     _current_level
	clc
	adc     #$01
	bcc     L0616
	inx
L0616:	jsr     pushax
	lda     #$0A
	jsr     tosumoda0
	clc
	adc     #$03
L0829:	ldy     #$00
	sta     (sp),y
	.dbg	line, "digger.c", 709
	lda     _current_level
	cmp     #$FE
	bne     L0618
	.dbg	line, "digger.c", 710
	lda     #$0D
	sta     (sp),y
	.dbg	line, "digger.c", 713
L0618:	ldy     #$02
	lda     (sp),y
	beq     L061C
	.dbg	line, "digger.c", 715
	lda     #$03
	sta     _num_lives
	.dbg	line, "digger.c", 716
	lda     #$00
	sta     _total_score
	sta     _total_score+1
	sta     _total_score+2
	sta     _total_score+3
	.dbg	line, "digger.c", 717
	sta     _num_gold
	.dbg	line, "digger.c", 719
L061C:	dey
	lda     (sp),y
	beq     L0624
	.dbg	line, "digger.c", 722
	lda     _current_level
	jsr     pusha0
	lda     #$03
	jsr     tosumoda0
	cpx     #$00
	bne     L082A
	cmp     #$00
	bne     L082A
	lda     _num_lives
	cmp     #$03
	bcs     L082A
	.dbg	line, "digger.c", 723
	clc
	adc     #$01
	sta     _num_lives
	.dbg	line, "digger.c", 725
L082A:	lda     #$00
	sta     _num_gold
	.dbg	line, "digger.c", 727
L0624:	ldy     #$02
	lda     (sp),y
	bne     L0828
	dey
	lda     (sp),y
	beq     L062E
	.dbg	line, "digger.c", 729
L0828:	lda     #<(_map)
	ldx     #>(_map)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$96
	jsr     tosumula0
	pha
	txa
	clc
	adc     #$B3
	tax
	pla
	jsr     pushax
	ldx     #$00
	lda     #$96
	jsr     _memcpy
	.dbg	line, "digger.c", 730
	jsr     _clear_screen
	.dbg	line, "digger.c", 731
	jsr     _draw_map
	.dbg	line, "digger.c", 732
	jsr     _init_monsters
	.dbg	line, "digger.c", 734
L062E:	lda     _spawn_x
	jsr     pusha
	lda     _spawn_y
	jsr     _clear_tile
	.dbg	line, "digger.c", 735
	lda     _digger_x
	jsr     pusha
	lda     _digger_y
	jsr     _clear_tile
	.dbg	line, "digger.c", 736
	lda     #$01
	sta     $D015
	.dbg	line, "digger.c", 737
	jsr     _statusbar_redraw_score
	.dbg	line, "digger.c", 738
	jsr     _statusbar_redraw_lives
	.dbg	line, "digger.c", 739
	jsr     _statusbar_redraw_level
	.dbg	line, "digger.c", 740
	jsr     _place_digger
	.dbg	line, "digger.c", 741
	lda     #$12
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 742
	lda     #$12
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 743
	lda     #$01
	sta     _reset_sprite_after_first_key
	.dbg	line, "digger.c", 744
	jsr     _turnoff_gold_animation
	.dbg	line, "digger.c", 745
	jsr     _load_wobble_gold_chars
	.dbg	line, "digger.c", 746
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ poll_keyboard (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_poll_keyboard: near

	.dbg	func, "poll_keyboard", "00", extern, "_poll_keyboard"

.segment	"CODE"

	.dbg	line, "digger.c", 516
	ldx     #$00
	lda     $00C5
	.dbg	line, "digger.c", 517
	rts
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ poll_joystik (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_poll_joystik: near

	.dbg	func, "poll_joystik", "00", extern, "_poll_joystik"
	.dbg	sym, "mask", "00", auto, -1

.segment	"CODE"

	.dbg	line, "digger.c", 520
	lda     $DC00
	jsr     pusha
	.dbg	line, "digger.c", 521
	ldy     #$00
	lda     (sp),y
	and     #$10
	bne     L082C
	.dbg	line, "digger.c", 522
	tax
	lda     #$3C
	jmp     incsp1
	.dbg	line, "digger.c", 523
L082C:	lda     (sp),y
	and     #$01
	bne     L082E
	.dbg	line, "digger.c", 524
	tax
	lda     #$09
	jmp     incsp1
	.dbg	line, "digger.c", 525
L082E:	lda     (sp),y
	and     #$02
	bne     L0830
	.dbg	line, "digger.c", 526
	tax
	lda     #$0D
	jmp     incsp1
	.dbg	line, "digger.c", 527
L0830:	lda     (sp),y
	and     #$04
	bne     L0832
	.dbg	line, "digger.c", 528
	tax
	lda     #$0A
	jmp     incsp1
	.dbg	line, "digger.c", 529
L0832:	lda     (sp),y
	ldx     #$00
	and     #$08
	bne     L0833
	.dbg	line, "digger.c", 530
	lda     #$12
	jmp     incsp1
	.dbg	line, "digger.c", 532
L0833:	lda     #$FF
	.dbg	line, "digger.c", 533
	jmp     incsp1
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ clear_screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clear_screen: near

	.dbg	func, "clear_screen", "00", extern, "_clear_screen"
	.dbg	sym, "i", "00", auto, -2

.segment	"CODE"

	.dbg	line, "digger.c", 83
	jsr     push0
	.dbg	line, "digger.c", 84
L004D:	ldy     #$01
	lda     (sp),y
	cmp     #$03
	bne     L0052
	dey
	lda     (sp),y
	cmp     #$E8
L0052:	bcs     L004E
	.dbg	line, "digger.c", 85
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$02
	sta     (ptr1),y
	.dbg	line, "digger.c", 86
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$08
	sta     (ptr1),y
	.dbg	line, "digger.c", 84
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$01
	bcc     L0054
	inx
L0054:	jsr     stax0sp
	jmp     L004D
	.dbg	line, "digger.c", 88
L004E:	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_tile (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_tile: near

	.dbg	func, "draw_tile", "00", extern, "_draw_tile"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 95
	jsr     pusha
	.dbg	line, "digger.c", 96
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 97
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L0064
	inx
L0064:	jsr     pushax
	.dbg	line, "digger.c", 99
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	sta     ptr1
	txa
	clc
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #<(_LEVEL_ART)
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 100
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$D8
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	sta     ptr1
	txa
	clc
	adc     #>(_LEVEL_ART_PEN_COLOR)
	sta     ptr1+1
	ldy     #<(_LEVEL_ART_PEN_COLOR)
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 102
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	dey
	jsr     staspidx
	.dbg	line, "digger.c", 103
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$D8
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	sta     ptr1
	txa
	clc
	adc     #>(_LEVEL_ART_PEN_COLOR)
	sta     ptr1+1
	ldy     #<(_LEVEL_ART_PEN_COLOR)
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 106
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 107
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$D8
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	sta     ptr1
	txa
	clc
	adc     #>(_LEVEL_ART_PEN_COLOR)
	sta     ptr1+1
	ldy     #<(_LEVEL_ART_PEN_COLOR)
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 109
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 110
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$D8
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	sta     ptr1
	txa
	clc
	adc     #>(_LEVEL_ART_PEN_COLOR)
	sta     ptr1+1
	ldy     #<(_LEVEL_ART_PEN_COLOR)
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 111
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_emerald (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_emerald: near

	.dbg	func, "draw_emerald", "00", extern, "_draw_emerald"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 114
	jsr     pusha
	.dbg	line, "digger.c", 115
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 116
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L00A0
	inx
L00A0:	jsr     pushax
	.dbg	line, "digger.c", 118
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$0C
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 119
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 122
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$0D
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 123
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 126
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$0E
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 127
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	sta     (ptr1),y
	.dbg	line, "digger.c", 129
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$0F
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 130
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	sta     (ptr1),y
	.dbg	line, "digger.c", 131
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_gold (unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_gold: near

	.dbg	func, "draw_gold", "00", extern, "_draw_gold"
	.dbg	sym, "x", "00", auto, 2
	.dbg	sym, "y", "00", auto, 1
	.dbg	sym, "is_wobbled", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 147
	jsr     pusha
	.dbg	line, "digger.c", 148
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 149
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L0108
	inx
L0108:	jsr     pushax
	.dbg	line, "digger.c", 150
	ldy     #$04
	lda     (sp),y
	jeq     L0109
	.dbg	line, "digger.c", 152
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$08
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 153
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 156
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$09
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 157
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 159
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$0A
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 160
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 162
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$0B
	.dbg	line, "digger.c", 164
	jmp     L0840
	.dbg	line, "digger.c", 166
L0109:	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$04
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 167
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 170
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 171
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 173
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$06
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 174
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 176
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	pha
	txa
	clc
	adc     #$80
	tax
	pla
	jsr     pushax
	lda     _current_level
	jsr     pusha0
	lda     #$06
	jsr     tosumoda0
	jsr     aslax4
	clc
	adc     #<(_LEVEL_ART)
	sta     ptr1
	txa
	adc     #>(_LEVEL_ART)
	sta     ptr1+1
	ldy     #$07
L0840:	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "digger.c", 177
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 179
	jmp     incsp7
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_gold_on_blank (unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_gold_on_blank: near

	.dbg	func, "draw_gold_on_blank", "00", extern, "_draw_gold_on_blank"
	.dbg	sym, "x", "00", auto, 2
	.dbg	sym, "y", "00", auto, 1
	.dbg	sym, "is_wobbled", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 181
	jsr     pusha
	.dbg	line, "digger.c", 182
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 183
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L0175
	inx
L0175:	jsr     pushax
	.dbg	line, "digger.c", 184
	ldy     #$04
	lda     (sp),y
	jeq     L0176
	.dbg	line, "digger.c", 185
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$89
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 186
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 187
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$8A
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 188
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 190
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$8B
	sta     (ptr1),y
	.dbg	line, "digger.c", 191
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 192
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$8C
	.dbg	line, "digger.c", 194
	jmp     L084C
	.dbg	line, "digger.c", 195
L0176:	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$15
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 196
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 197
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$16
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 198
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 200
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$17
	sta     (ptr1),y
	.dbg	line, "digger.c", 201
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 202
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$18
L084C:	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 203
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 205
	jmp     incsp7
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_brokengold (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_brokengold: near

	.dbg	func, "draw_brokengold", "00", extern, "_draw_brokengold"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 207
	jsr     pusha
	.dbg	line, "digger.c", 208
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 209
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L01D2
	inx
L01D2:	jsr     pushax
	.dbg	line, "digger.c", 210
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	tya
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 211
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 212
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$02
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 213
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 215
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$13
	sta     (ptr1),y
	.dbg	line, "digger.c", 216
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 217
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$14
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 218
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 219
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_bonus (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_bonus: near

	.dbg	func, "draw_bonus", "00", extern, "_draw_bonus"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 134
	jsr     pusha
	.dbg	line, "digger.c", 135
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 136
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L00D8
	inx
L00D8:	jsr     pushax
	.dbg	line, "digger.c", 137
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$6D
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 138
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 139
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$6E
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 140
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 141
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$6F
	sta     (ptr1),y
	.dbg	line, "digger.c", 142
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	sta     (ptr1),y
	.dbg	line, "digger.c", 143
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$70
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 144
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$09
	sta     (ptr1),y
	.dbg	line, "digger.c", 145
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw_map (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_map: near

	.dbg	func, "draw_map", "00", extern, "_draw_map"
	.dbg	sym, "x", "00", auto, -1
	.dbg	sym, "y", "00", auto, -2
	.dbg	sym, "map_element", "00", auto, -3

.segment	"CODE"

	.dbg	line, "digger.c", 224
	jsr     decsp3
	lda     #$00
	sta     _num_emeralds_left
	.dbg	line, "digger.c", 225
	ldy     #$01
L0860:	sta     (sp),y
	cmp     #$0A
	jcs     L0859
	.dbg	line, "digger.c", 226
	lda     #$00
	iny
L085F:	sta     (sp),y
	cmp     #$0F
	jcs     L0202
	.dbg	line, "digger.c", 227
	dey
	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	tay
	lda     (ptr1),y
	ldy     #$00
	sta     (sp),y
	.dbg	line, "digger.c", 228
	lda     (sp),y
	.dbg	line, "digger.c", 247
	beq     L0218
	cmp     #$01
	beq     L021D
	cmp     #$03
	beq     L0231
	cmp     #$04
	beq     L0222
	cmp     #$05
	beq     L0228
	jmp     L020A
	.dbg	line, "digger.c", 230
L0218:	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _clear_tile
	.dbg	line, "digger.c", 231
	jmp     L020A
	.dbg	line, "digger.c", 233
L021D:	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _draw_tile
	.dbg	line, "digger.c", 234
	jmp     L020A
	.dbg	line, "digger.c", 236
L0222:	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _draw_emerald
	.dbg	line, "digger.c", 237
	lda     _num_emeralds_left
	clc
	adc     #$01
	sta     _num_emeralds_left
	.dbg	line, "digger.c", 238
	jmp     L020A
	.dbg	line, "digger.c", 240
L0228:	jsr     decsp2
	ldy     #$04
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	tya
	jsr     _draw_gold
	.dbg	line, "digger.c", 241
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _init_gold
	.dbg	line, "digger.c", 242
	jmp     L020A
	.dbg	line, "digger.c", 244
L0231:	ldy     #$02
	lda     (sp),y
	sta     _spawn_x
	.dbg	line, "digger.c", 245
	dey
	lda     (sp),y
	sta     _spawn_y
	.dbg	line, "digger.c", 226
L020A:	ldy     #$02
	lda     (sp),y
	clc
	adc     #$01
	jmp     L085F
	.dbg	line, "digger.c", 225
L0202:	dey
	lda     (sp),y
	clc
	adc     #$01
	jmp     L0860
	.dbg	line, "digger.c", 251
L0859:	lda     _num_gold
	sta     _num_gold_exist
	.dbg	line, "digger.c", 254
	lda     #$02
	sta     (sp),y
	.dbg	line, "digger.c", 255
	lda     #$04
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 256
	dey
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L084D
	inx
L084D:	sta     ptr1
	stx     ptr1+1
	lda     #$03
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 257
	iny
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L084E
	inx
L084E:	sta     ptr1
	stx     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 258
	lda     #$02
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 259
	lda     #$23
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 260
	dey
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L084F
	inx
L084F:	sta     ptr1
	stx     ptr1+1
	lda     #$05
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 261
	iny
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L0850
	inx
L0850:	sta     ptr1
	stx     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 262
	lda     #$17
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 263
	lda     #$04
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 264
	dey
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L0851
	inx
L0851:	sta     ptr1
	stx     ptr1+1
	lda     #$09
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 265
	iny
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L0852
	inx
L0852:	sta     ptr1
	stx     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 266
	lda     #$17
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 267
	lda     #$23
	iny
	sta     (sp),y
	.dbg	line, "digger.c", 268
	dey
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L0853
	inx
L0853:	sta     ptr1
	stx     ptr1+1
	lda     #$07
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 269
	iny
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L0854
	inx
L0854:	sta     ptr1
	stx     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 270
	lda     #$05
	ldy     #$02
L0861:	sta     (sp),y
	cmp     #$23
	bcs     L085C
	.dbg	line, "digger.c", 271
	lda     (sp),y
	clc
	adc     #$50
	sta     ptr1
	lda     #$00
	adc     #$80
	sta     ptr1+1
	lda     #$04
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 272
	ldy     #$02
	lda     (sp),y
	clc
	adc     #$50
	sta     ptr1
	lda     #$00
	adc     #$D8
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 273
	ldy     #$02
	lda     (sp),y
	clc
	adc     #$98
	sta     ptr1
	lda     #$00
	adc     #$83
	sta     ptr1+1
	lda     #$08
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 274
	ldy     #$02
	lda     (sp),y
	clc
	adc     #$98
	sta     ptr1
	lda     #$00
	adc     #$DB
	sta     ptr1+1
	lda     #$0F
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 270
	ldy     #$02
	lda     (sp),y
	clc
	adc     #$01
	jmp     L0861
	.dbg	line, "digger.c", 276
L085C:	lda     #$03
	dey
L0862:	sta     (sp),y
	cmp     #$17
	bcs     L028D
	.dbg	line, "digger.c", 277
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	ldy     #$04
	lda     #$0A
	sta     (ptr1),y
	.dbg	line, "digger.c", 278
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	ldy     #$04
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 279
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	ldy     #$23
	lda     #$06
	sta     (ptr1),y
	.dbg	line, "digger.c", 280
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	ldy     #$23
	lda     #$0F
	sta     (ptr1),y
	.dbg	line, "digger.c", 276
	ldy     #$01
	lda     (sp),y
	clc
	adc     #$01
	jmp     L0862
	.dbg	line, "digger.c", 282
L028D:	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned int __near__ field_xy_to_offset (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_field_xy_to_offset: near

	.dbg	func, "field_xy_to_offset", "00", extern, "_field_xy_to_offset"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0

.segment	"CODE"

	.dbg	line, "digger.c", 285
	jsr     pusha
	.dbg	line, "digger.c", 289
	ldx     #$00
	lda     (sp,x)
	jsr     pusha0
	lda     #$50
	jsr     tosumula0
	clc
	adc     #$7D
	bcc     L02AE
	inx
L02AE:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	ldy     #$01
	lda     (sp),y
	asl     a
	bcc     L0864
	inx
	clc
L0864:	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	.dbg	line, "digger.c", 290
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ flash_screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_flash_screen: near

	.dbg	func, "flash_screen", "00", extern, "_flash_screen"
	.dbg	sym, "i", "00", auto, -2
	.dbg	sym, "color", "00", auto, -3

.segment	"CODE"

	.dbg	line, "digger.c", 647
	jsr     push0
	.dbg	line, "digger.c", 648
	jsr     pusha
	.dbg	line, "digger.c", 649
	jmp     L058F
	.dbg	line, "digger.c", 650
L058D:	ldy     #$01
	ldx     #$00
	tya
	jsr     addeqysp
	jsr     pushax
	lda     #$3C
	jsr     tosumoda0
	cpx     #$00
	bne     L058F
	cmp     #$00
	bne     L058F
	.dbg	line, "digger.c", 651
	ldy     #$01
	lda     (sp),y
	sta     $D021
	.dbg	line, "digger.c", 652
	lda     (sp),y
	sta     $D020
	.dbg	line, "digger.c", 649
L058F:	ldy     #$02
	lda     (sp),y
	cmp     #$01
	bne     L0591
	dey
	lda     (sp),y
	cmp     #$FF
L0591:	bcc     L058D
	.dbg	line, "digger.c", 655
	lda     #$00
	sta     $D021
	.dbg	line, "digger.c", 656
	sta     $D020
	.dbg	line, "digger.c", 657
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"
	.dbg	sym, "c", "00", auto, -1
	.dbg	sym, "last_c", "00", auto, -2
	.dbg	sym, "sprite_num", "00", auto, -3
	.dbg	sym, "digger_sprite_addr", "00", auto, -5
	.dbg	sym, "cycle_counter", "00", auto, -6
	.dbg	sym, "monster_spawn_clock", "00", auto, -10
	.dbg	sym, "last_monster_spawn_clock", "00", auto, -14
	.dbg	sym, "last_shoot_clock", "00", auto, -18
	.dbg	sym, "last_shoot_clock_diff", "00", auto, -22
	.dbg	sym, "last_bonus_clock_diff", "00", auto, -26
	.dbg	sym, "last_monster_spawn_clock_diff", "00", auto, -30
	.dbg	sym, "move_res", "00", auto, -31

.segment	"CODE"

	.dbg	line, "digger.c", 749
	jsr     decsp1
	lda     #$12
	jsr     pusha
	.dbg	line, "digger.c", 750
	lda     #$00
	jsr     pusha
	.dbg	line, "digger.c", 751
	ldx     #$83
	lda     #$F8
	jsr     pushax
	.dbg	line, "digger.c", 752
	lda     #$00
	jsr     pusha
	.dbg	line, "digger.c", 753
	jsr     pushl0
	.dbg	line, "digger.c", 754
	jsr     pushl0
	.dbg	line, "digger.c", 755
	jsr     pushl0
	.dbg	line, "digger.c", 757
	jsr     pushl0
	.dbg	line, "digger.c", 758
	jsr     pushl0
	.dbg	line, "digger.c", 759
	jsr     pushl0
	.dbg	line, "digger.c", 761
	jsr     pusha
	.dbg	line, "digger.c", 763
	jsr     _clear_screen
	.dbg	line, "digger.c", 765
	lda     #$00
	sta     $D020
	.dbg	line, "digger.c", 766
	sta     $D021
	.dbg	line, "digger.c", 769
	lda     #$E1
	sta     $0328
	.dbg	line, "digger.c", 770
	ldy     #$00
	jsr     _disable_nmi
	.dbg	line, "digger.c", 772
	jsr     _setup_sprites
	.dbg	line, "digger.c", 775
	lda     $DD00
	and     #$FC
	ora     #$01
	sta     $DD00
	.dbg	line, "digger.c", 776
	lda     $D016
	ora     #$10
	sta     $D016
	.dbg	line, "digger.c", 781
	lda     #$02
	sta     $D018
	.dbg	line, "digger.c", 783
	lda     #$00
	sta     $D021
	.dbg	line, "digger.c", 784
	lda     #$05
	sta     $D022
	.dbg	line, "digger.c", 785
	lda     #$02
	sta     $D023
	.dbg	line, "digger.c", 787
	lda     #$04
	sta     _sid_index
	.dbg	line, "digger.c", 788
	ldy     #$00
	jsr     _play_popcorn
	.dbg	line, "digger.c", 790
	jsr     _backup_alphabet
	.dbg	line, "digger.c", 793
	jsr     _intro
	.dbg	line, "digger.c", 795
	lda     #$00
	sta     _sid_index
	.dbg	line, "digger.c", 796
	tay
	jsr     _play_popcorn
	.dbg	line, "digger.c", 799
	lda     _override_level_start
	sta     _current_level
	.dbg	line, "digger.c", 801
	lda     #$01
	jsr     pusha
	jsr     _prepare_game
	.dbg	line, "digger.c", 802
	lda     #$12
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 803
	lda     #$12
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 804
	lda     #$12
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	ldy     #$1C
	sta     (sp),y
	.dbg	line, "digger.c", 807
	ldy     #$19
L086F:	lda     (sp),y
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	cpx     #$00
	bne     L06B3
	cmp     #$00
	bne     L06B3
	.dbg	line, "digger.c", 808
	jsr     _clock
	sta     _global_clock
	stx     _global_clock+1
	ldy     sreg
	sty     _global_clock+2
	ldy     sreg+1
	sty     _global_clock+3
	.dbg	line, "digger.c", 811
L06B3:	lda     _can_shoot
	bne     L06B8
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	ldy     #$14
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$02
	lda     #$58
	jsr     tosadd0ax
	jsr     tosugteax
	beq     L06B8
	.dbg	line, "digger.c", 812
	lda     #$01
	sta     _can_shoot
	.dbg	line, "digger.c", 813
	ldy     #$1D
	lda     (sp),y
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 814
	ldy     #$1D
	lda     (sp),y
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 815
	ldy     #$1B
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     _sprite_1
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 818
L06B8:	lda     _last_bonus_clock+3
	sta     sreg+1
	lda     _last_bonus_clock+2
	sta     sreg
	ldx     _last_bonus_clock+1
	lda     _last_bonus_clock
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     tosneeax
	beq     L06CB
	.dbg	line, "digger.c", 819
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	lda     _last_bonus_clock+3
	sta     sreg+1
	lda     _last_bonus_clock+2
	sta     sreg
	ldx     _last_bonus_clock+1
	lda     _last_bonus_clock
	jsr     pusheax
	ldx     #$03
	lda     #$84
	jsr     tosadd0ax
	jsr     tosugteax
	beq     L06CB
	.dbg	line, "digger.c", 820
	lda     _bonus_mode_state
	cmp     #$02
	bne     L0870
	.dbg	line, "digger.c", 821
	jsr     _flash_screen
	.dbg	line, "digger.c", 822
	lda     #$00
	sta     _sid_index
	.dbg	line, "digger.c", 823
	tay
	jsr     _play_popcorn
	.dbg	line, "digger.c", 825
L0870:	lda     #$00
	sta     _num_killed_monsters
	.dbg	line, "digger.c", 826
	sta     $D020
	.dbg	line, "digger.c", 827
	sta     $D021
	.dbg	line, "digger.c", 828
	lda     _spawn_x
	jsr     pusha
	lda     _spawn_y
	jsr     _clear_tile
	.dbg	line, "digger.c", 829
	lda     #$00
	sta     _last_bonus_clock
	sta     _last_bonus_clock+1
	sta     _last_bonus_clock+2
	sta     _last_bonus_clock+3
	.dbg	line, "digger.c", 830
	sta     _bonus_mode_state
	.dbg	line, "digger.c", 836
L06CB:	jsr     _poll_joystik
	ldy     #$1E
	sta     (sp),y
	.dbg	line, "digger.c", 837
	cmp     #$FF
	bne     L0872
	.dbg	line, "digger.c", 838
	jsr     _poll_keyboard
	ldy     #$1E
	sta     (sp),y
	.dbg	line, "digger.c", 840
L0872:	lda     (sp),y
	cmp     #$3C
	bne     L0877
	.dbg	line, "digger.c", 841
	lda     _can_shoot
	beq     L0877
	lda     _is_bullet
	bne     L0877
	.dbg	line, "digger.c", 842
	dey
	lda     (sp),y
	sta     _bullet_direction
	.dbg	line, "digger.c", 843
	jsr     _shoot_bullet
	.dbg	line, "digger.c", 844
	lda     _bullet_direction
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 845
	lda     _bullet_direction
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 846
	ldy     #$1B
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     _sprite_1
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 847
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	ldy     #$0D
	jsr     steaxysp
	.dbg	line, "digger.c", 850
	ldy     #$1E
L0877:	lda     (sp),y
	cmp     #$12
	jne     L087F
	.dbg	line, "digger.c", 851
	dey
	lda     (sp),y
	iny
	cmp     (sp),y
	bne     L0878
	lda     _reset_sprite_after_first_key
	beq     L0879
	.dbg	line, "digger.c", 852
L0878:	dey
	lda     (sp),y
	jsr     pusha
	ldy     #$1F
	lda     (sp),y
	jsr     _adjust_digger_pos
	.dbg	line, "digger.c", 853
	lda     #$12
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 854
	lda     #$12
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 855
	ldy     #$1B
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     _sprite_1
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 856
	sty     _reset_sprite_after_first_key
	.dbg	line, "digger.c", 858
	ldy     #$1E
L0879:	lda     (sp),y
	jsr     _move_digger
	ldy     #$00
	sta     (sp),y
	tax
	beq     L087D
	.dbg	line, "digger.c", 859
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$01
	bcc     L086D
	inx
	clc
L086D:	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	bne     L087C
	lda     _digger_x
	cmp     #$0D
	bcs     L087C
	.dbg	line, "digger.c", 860
	clc
	adc     #$02
	jsr     pusha
	lda     _digger_y
	jsr     _clear_tile
	.dbg	line, "digger.c", 861
	jsr     decsp2
	lda     _digger_x
	clc
	adc     #$01
	ldy     #$01
	sta     (sp),y
	lda     _digger_y
	dey
	sta     (sp),y
	ldy     #$20
	lda     (sp),y
	jsr     _push_gold
	.dbg	line, "digger.c", 863
L087C:	lda     _digger_x
	cmp     #$0E
	bcs     L087D
	.dbg	line, "digger.c", 864
	clc
	adc     #$01
	jsr     pusha
	lda     _digger_y
	jsr     _eat_tile
	.dbg	line, "digger.c", 867
L087D:	lda     #$12
	ldy     #$1D
	sta     (sp),y
	.dbg	line, "digger.c", 869
	iny
L087F:	lda     (sp),y
	cmp     #$09
	bne     L0887
	.dbg	line, "digger.c", 870
	dey
	lda     (sp),y
	iny
	cmp     (sp),y
	bne     L0880
	lda     _reset_sprite_after_first_key
	beq     L0881
	.dbg	line, "digger.c", 871
L0880:	dey
	lda     (sp),y
	jsr     pusha
	ldy     #$1F
	lda     (sp),y
	jsr     _adjust_digger_pos
	.dbg	line, "digger.c", 872
	lda     #$09
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 873
	lda     #$09
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 874
	ldy     #$1B
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     _sprite_1
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 875
	sty     _reset_sprite_after_first_key
	.dbg	line, "digger.c", 877
	ldy     #$1E
L0881:	lda     (sp),y
	jsr     _move_digger
	tax
	beq     L0885
	lda     _digger_y
	beq     L0885
	.dbg	line, "digger.c", 878
	lda     _digger_x
	jsr     pusha
	lda     _digger_y
	sec
	sbc     #$01
	jsr     _eat_tile
	.dbg	line, "digger.c", 880
L0885:	lda     #$09
	ldy     #$1D
	sta     (sp),y
	.dbg	line, "digger.c", 882
	iny
L0887:	lda     (sp),y
	cmp     #$0A
	jne     L088F
	.dbg	line, "digger.c", 883
	dey
	lda     (sp),y
	iny
	cmp     (sp),y
	bne     L0888
	lda     _reset_sprite_after_first_key
	beq     L0889
	.dbg	line, "digger.c", 884
L0888:	dey
	lda     (sp),y
	jsr     pusha
	ldy     #$1F
	lda     (sp),y
	jsr     _adjust_digger_pos
	.dbg	line, "digger.c", 885
	lda     #$0A
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 886
	lda     #$0A
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 887
	ldy     #$1B
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     _sprite_1
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 888
	sty     _reset_sprite_after_first_key
	.dbg	line, "digger.c", 890
	ldy     #$1E
L0889:	lda     (sp),y
	jsr     _move_digger
	ldy     #$00
	sta     (sp),y
	tax
	beq     L088D
	.dbg	line, "digger.c", 891
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$01
	bcs     L077A
	dex
L077A:	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	bne     L088C
	lda     _digger_x
	cmp     #$02
	bcc     L088C
	.dbg	line, "digger.c", 892
	sec
	sbc     #$02
	jsr     pusha
	lda     _digger_y
	jsr     _clear_tile
	.dbg	line, "digger.c", 893
	jsr     decsp2
	lda     _digger_x
	sec
	sbc     #$01
	ldy     #$01
	sta     (sp),y
	lda     _digger_y
	dey
	sta     (sp),y
	ldy     #$20
	lda     (sp),y
	jsr     _push_gold
	.dbg	line, "digger.c", 895
L088C:	lda     _digger_x
	beq     L088D
	.dbg	line, "digger.c", 896
	sec
	sbc     #$01
	jsr     pusha
	lda     _digger_y
	jsr     _eat_tile
	.dbg	line, "digger.c", 899
L088D:	lda     #$0A
	ldy     #$1D
	sta     (sp),y
	.dbg	line, "digger.c", 901
	iny
L088F:	lda     (sp),y
	cmp     #$0D
	bne     L0897
	.dbg	line, "digger.c", 902
	dey
	lda     (sp),y
	iny
	cmp     (sp),y
	bne     L0890
	lda     _reset_sprite_after_first_key
	beq     L0891
	.dbg	line, "digger.c", 903
L0890:	dey
	lda     (sp),y
	jsr     pusha
	ldy     #$1F
	lda     (sp),y
	jsr     _adjust_digger_pos
	.dbg	line, "digger.c", 904
	lda     #$0D
	jsr     pusha
	lda     #$01
	jsr     _get_digger_sprite_num
	sta     _sprite_1
	.dbg	line, "digger.c", 905
	lda     #$0D
	jsr     pusha
	lda     #$02
	jsr     _get_digger_sprite_num
	sta     _sprite_2
	.dbg	line, "digger.c", 906
	ldy     #$1B
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     _sprite_1
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 907
	sty     _reset_sprite_after_first_key
	.dbg	line, "digger.c", 909
	ldy     #$1E
L0891:	lda     (sp),y
	jsr     _move_digger
	tax
	beq     L0895
	lda     _digger_y
	cmp     #$09
	bcs     L0895
	.dbg	line, "digger.c", 910
	lda     _digger_x
	jsr     pusha
	lda     _digger_y
	clc
	adc     #$01
	jsr     _eat_tile
	.dbg	line, "digger.c", 912
L0895:	lda     #$0D
	ldy     #$1D
	sta     (sp),y
	.dbg	line, "digger.c", 914
	iny
L0897:	lda     (sp),y
	cmp     #$29
	jne     L089A
	.dbg	line, "digger.c", 915
	jsr     _clear_kbd_buffer
	.dbg	line, "digger.c", 917
	jsr     _clock
	sta     _global_clock
	stx     _global_clock+1
	ldy     sreg
	sty     _global_clock+2
	ldy     sreg+1
	sty     _global_clock+3
	.dbg	line, "digger.c", 918
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	ldy     #$14
	jsr     ldeaxysp
	jsr     tossubeax
	ldy     #$09
	jsr     steaxysp
	.dbg	line, "digger.c", 919
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	lda     _last_bonus_clock+3
	sta     sreg+1
	lda     _last_bonus_clock+2
	sta     sreg
	ldx     _last_bonus_clock+1
	lda     _last_bonus_clock
	jsr     tossubeax
	ldy     #$05
	jsr     steaxysp
	.dbg	line, "digger.c", 920
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	ldy     #$18
	jsr     ldeaxysp
	jsr     tossubeax
	ldy     #$01
	jsr     steaxysp
	.dbg	line, "digger.c", 921
	jsr     _wait_for_key
	.dbg	line, "digger.c", 923
	lda     #$00
	.dbg	line, "digger.c", 924
	jmp     L08A0
	.dbg	line, "digger.c", 925
L07BE:	jsr     _poll_keyboard
L08A0:	ldy     #$1E
	sta     (sp),y
	.dbg	line, "digger.c", 924
	lda     (sp),y
	beq     L07BE
	cmp     #$29
	beq     L07BE
	cmp     #$3C
	beq     L07BE
	.dbg	line, "digger.c", 928
	jsr     _clock
	sta     _global_clock
	stx     _global_clock+1
	ldy     sreg
	sty     _global_clock+2
	ldy     sreg+1
	sty     _global_clock+3
	.dbg	line, "digger.c", 929
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	ldy     #$10
	jsr     ldeaxysp
	jsr     tossubeax
	ldy     #$0D
	jsr     steaxysp
	.dbg	line, "digger.c", 930
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	ldy     #$0C
	jsr     ldeaxysp
	jsr     tossubeax
	sta     _last_bonus_clock
	stx     _last_bonus_clock+1
	ldy     sreg
	sty     _last_bonus_clock+2
	ldy     sreg+1
	sty     _last_bonus_clock+3
	.dbg	line, "digger.c", 931
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     pusheax
	ldy     #$08
	jsr     ldeaxysp
	jsr     tossubeax
	ldy     #$11
	jsr     steaxysp
	.dbg	line, "digger.c", 933
	ldy     #$1E
L089A:	lda     (sp),y
	cmp     #$2A
	bne     L07CD
	lda     _can_skip_levels
	beq     L07CD
	.dbg	line, "digger.c", 934
	jsr     _level_complete
	.dbg	line, "digger.c", 937
L07CD:	ldy     #$19
	lda     (sp),y
	jsr     _update_bullet
	.dbg	line, "digger.c", 945
	ldy     #$19
	lda     (sp),y
	jsr     _update_monsters
	.dbg	line, "digger.c", 948
	ldy     #$19
	lda     (sp),y
	jsr     _update_gold
	.dbg	line, "digger.c", 950
	ldy     #$19
	lda     (sp),y
	jsr     pusha0
	lda     #$07
	jsr     tosumoda0
	cpx     #$00
	bne     L07E4
	cmp     #$00
	bne     L07E4
	.dbg	line, "digger.c", 952
	lda     _sprite_1
	cmp     $83F8
	bne     L089D
	.dbg	line, "digger.c", 953
	lda     _sprite_2
	.dbg	line, "digger.c", 954
	jmp     L086C
	.dbg	line, "digger.c", 955
L089D:	lda     _sprite_1
L086C:	sta     $83F8
	.dbg	line, "digger.c", 959
L07E4:	lda     _num_monsters_alive
	cmp     _NUM_SPAWNS
	bcs     L07EA
	.dbg	line, "digger.c", 960
	ldy     #$14
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$01
	lda     #$2C
	jsr     tosadd0ax
	jsr     pusheax
	.dbg	line, "digger.c", 961
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	jsr     tosulteax
	beq     L07EA
	lda     _bonus_mode_state
	cmp     #$02
	beq     L07EA
	.dbg	line, "digger.c", 962
	jsr     _spawn_monster
	.dbg	line, "digger.c", 963
	lda     _global_clock+3
	sta     sreg+1
	lda     _global_clock+2
	sta     sreg
	ldx     _global_clock+1
	lda     _global_clock
	ldy     #$11
	jsr     steaxysp
	.dbg	line, "digger.c", 964
	lda     _num_monsters_alive
	clc
	adc     #$01
	sta     _num_monsters_alive
	.dbg	line, "digger.c", 965
	jsr     _adjust_game_step
	.dbg	line, "digger.c", 968
L07EA:	ldy     #$19
	lda     (sp),y
	clc
	adc     #$01
	sta     (sp),y
	.dbg	line, "digger.c", 806
	jmp     L086F
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ adjust_game_step (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_adjust_game_step: near

	.dbg	func, "adjust_game_step", "00", extern, "_adjust_game_step"

.segment	"CODE"

	.dbg	line, "digger.c", 975
	ldx     #$00
	lda     _num_monsters_alive
	.dbg	line, "digger.c", 991
	beq     L08A2
	cmp     #$01
	beq     L08A1
	cmp     #$02
	beq     L08A5
	cmp     #$03
	beq     L08A7
	cmp     #$04
	beq     L08A7
	jmp     L08A8
	.dbg	line, "digger.c", 977
L08A2:	lda     #$01
	.dbg	line, "digger.c", 978
	jmp     L08A1
	.dbg	line, "digger.c", 983
L08A5:	lda     #$01
	.dbg	line, "digger.c", 984
	jmp     L08A1
	.dbg	line, "digger.c", 989
L08A7:	lda     #$02
L08A1:	sta     _step
	.dbg	line, "digger.c", 994
L08A8:	lda     _num_gold_exist
	cmp     #$02
	bcs     L08AB
	lda     _num_monsters_alive
	cmp     #$02
	bcs     L08AB
	.dbg	line, "digger.c", 995
	lda     #$01
	sta     _step
	.dbg	line, "digger.c", 998
L08AB:	lda     _step
	jsr     mulax3
	cmp     #$80
	sta     _bullet_step
	.dbg	line, "digger.c", 999
	lda     _step
	asl     a
	sta     _gold_falling_step
	.dbg	line, "digger.c", 1000
	rts
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ clear_tile (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clear_tile: near

	.dbg	func, "clear_tile", "00", extern, "_clear_tile"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0
	.dbg	sym, "offset", "00", auto, -2
	.dbg	sym, "offset2", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 322
	jsr     pusha
	.dbg	line, "digger.c", 323
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _field_xy_to_offset
	jsr     pushax
	.dbg	line, "digger.c", 324
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L02E9
	inx
L02E9:	jsr     pushax
	.dbg	line, "digger.c", 325
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	tya
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 326
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$08
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 327
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$02
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 328
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$08
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 330
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$02
	sta     (ptr1),y
	.dbg	line, "digger.c", 331
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$08
	sta     (ptr1),y
	.dbg	line, "digger.c", 332
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	sta     ptr1
	txa
	clc
	adc     #$80
	sta     ptr1+1
	lda     #$02
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 333
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	txa
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$08
	sta     (ptr1),y
	.dbg	line, "digger.c", 335
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$05
	lda     (sp),y
	tay
	lda     (ptr1),y
	cmp     #$04
	bne     L0319
	.dbg	line, "digger.c", 336
	lda     _num_emeralds_left
	sec
	sbc     #$01
	sta     _num_emeralds_left
	.dbg	line, "digger.c", 337
	lda     _num_emeralds_left
	bne     L0319
	.dbg	line, "digger.c", 338
	jsr     _level_complete
	.dbg	line, "digger.c", 339
	jmp     incsp6
	.dbg	line, "digger.c", 342
L0319:	ldy     #$05
	lda     (sp),y
	cmp     _spawn_x
	bne     L08B1
	dey
	lda     (sp),y
	cmp     _spawn_y
	bne     L08B5
	jmp     L08B3
	.dbg	line, "digger.c", 343
L08B1:	dey
L08B5:	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$05
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L08AE
	inx
L08AE:	sta     ptr1
	stx     ptr1+1
	lda     #$00
	.dbg	line, "digger.c", 344
	jmp     L08B4
	.dbg	line, "digger.c", 345
L08B3:	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$05
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L08AF
	inx
L08AF:	sta     ptr1
	stx     ptr1+1
	lda     #$03
L08B4:	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "digger.c", 347
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ level_complete (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_level_complete: near

	.dbg	func, "level_complete", "00", extern, "_level_complete"
	.dbg	sym, "clk", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 351
	jsr     decsp4
	inc     _current_level
	lda     _current_level
	sta     _current_level
	.dbg	line, "digger.c", 352
	jsr     _clock
	jsr     steax0sp
	.dbg	line, "digger.c", 353
	lda     #$02
	sta     _sid_index
	.dbg	line, "digger.c", 354
	ldy     #$00
	jsr     _play_popcorn
	.dbg	line, "digger.c", 355
	jsr     _flash_screen
	.dbg	line, "digger.c", 356
L0333:	jsr     _clock
	jsr     pusheax
	ldy     #$07
	jsr     ldeaxysp
	ldy     #$B4
	jsr     inceaxy
	jsr     tosulteax
	bne     L0333
	.dbg	line, "digger.c", 357
	lda     #$00
	sta     _sid_index
	.dbg	line, "digger.c", 358
	tay
	jsr     _play_popcorn
	.dbg	line, "digger.c", 359
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _prepare_game
	.dbg	line, "digger.c", 360
	jmp     incsp4
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ eat_tile (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_eat_tile: near

	.dbg	func, "eat_tile", "00", extern, "_eat_tile"
	.dbg	sym, "x", "00", auto, 1
	.dbg	sym, "y", "00", auto, 0

.segment	"CODE"

	.dbg	line, "digger.c", 293
	jsr     pusha
	.dbg	line, "digger.c", 294
	ldx     #$00
	lda     (sp,x)
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$01
	lda     (sp),y
	tay
	lda     (ptr1),y
	cmp     #$03
	bne     L02B0
	lda     _bonus_mode_state
	cmp     #$01
	bne     L02B0
	.dbg	line, "digger.c", 295
	jsr     _flash_screen
	.dbg	line, "digger.c", 296
	ldy     #$00
	jsr     _play_sfx_eat
	.dbg	line, "digger.c", 297
	ldy     #$00
	jsr     _play_sfx_eat
	.dbg	line, "digger.c", 298
	ldy     #$00
	jsr     _play_sfx_eat
	.dbg	line, "digger.c", 299
	lda     _total_score+3
	sta     sreg+1
	lda     _total_score+2
	sta     sreg
	ldx     _total_score+1
	lda     _total_score
	jsr     pusheax
	ldx     #$03
	lda     #$00
	lda     #$E8
	jsr     tosadd0ax
	sta     _total_score
	stx     _total_score+1
	ldy     sreg
	sty     _total_score+2
	ldy     sreg+1
	sty     _total_score+3
	.dbg	line, "digger.c", 300
	lda     #$02
	sta     _bonus_mode_state
	.dbg	line, "digger.c", 301
	lda     #$00
	sta     _num_killed_monsters
	.dbg	line, "digger.c", 302
	sta     $D021
	.dbg	line, "digger.c", 303
	lda     #$02
	sta     $D020
	.dbg	line, "digger.c", 304
	lda     #$03
	sta     _sid_index
	.dbg	line, "digger.c", 305
	ldy     #$00
	jsr     _play_popcorn
	.dbg	line, "digger.c", 306
	jsr     _clock
	sta     _last_bonus_clock
	stx     _last_bonus_clock+1
	ldy     sreg
	sty     _last_bonus_clock+2
	ldy     sreg+1
	sty     _last_bonus_clock+3
	.dbg	line, "digger.c", 307
	jsr     _statusbar_redraw_score
	.dbg	line, "digger.c", 309
L02B0:	ldx     #$00
	lda     (sp,x)
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$01
	lda     (sp),y
	tay
	lda     (ptr1),y
	cmp     #$04
	bne     L02D0
	.dbg	line, "digger.c", 310
	ldy     #$00
	jsr     _play_sfx_eat
	.dbg	line, "digger.c", 311
	ldy     #<(_total_score)
	sty     ptr1
	ldy     #>(_total_score)
	lda     #$19
	jsr     laddeqa
	.dbg	line, "digger.c", 313
	jmp     L08B6
L02D0:	ldx     #$00
	lda     (sp,x)
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     #$01
	lda     (sp),y
	tay
	lda     (ptr1),y
	cmp     #$06
	bne     L02D9
	.dbg	line, "digger.c", 314
	ldy     #$00
	jsr     _play_sfx_eat_gold
	.dbg	line, "digger.c", 315
	lda     _total_score+3
	sta     sreg+1
	lda     _total_score+2
	sta     sreg
	ldx     _total_score+1
	lda     _total_score
	jsr     pusheax
	ldx     #$01
	lda     #$00
	lda     #$F4
	jsr     tosadd0ax
	sta     _total_score
	stx     _total_score+1
	ldy     sreg
	sty     _total_score+2
	ldy     sreg+1
	sty     _total_score+3
	.dbg	line, "digger.c", 316
L08B6:	jsr     _statusbar_redraw_score
	.dbg	line, "digger.c", 318
L02D9:	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _clear_tile
	.dbg	line, "digger.c", 319
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ place_digger (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_place_digger: near

	.dbg	func, "place_digger", "00", extern, "_place_digger"
	.dbg	sym, "y_screen", "00", auto, -1
	.dbg	sym, "x_screen", "00", auto, -3
	.dbg	sym, "res", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 368
	jsr     decsp3
	lda     #$00
	jsr     pusha
	.dbg	line, "digger.c", 370
	lda     _digger_x_offset
	sec
	sbc     #$10
	bvs     L0340
	eor     #$80
L0340:	bpl     L08BD
	.dbg	line, "digger.c", 371
	inc     _digger_x
	.dbg	line, "digger.c", 374
	jmp     L08C7
L08BD:	lda     _digger_x_offset
	sec
	sbc     #$F1
	bvc     L034B
	eor     #$80
L034B:	bpl     L08BE
	.dbg	line, "digger.c", 375
	dec     _digger_x
	.dbg	line, "digger.c", 376
L08C7:	lda     #$00
	sta     _digger_x_offset
	.dbg	line, "digger.c", 377
	lda     #$01
	ldy     #$00
	sta     (sp),y
	.dbg	line, "digger.c", 379
L08BE:	lda     _digger_y_offset
	sec
	sbc     #$10
	bvs     L0355
	eor     #$80
L0355:	bpl     L08BF
	.dbg	line, "digger.c", 380
	inc     _digger_y
	.dbg	line, "digger.c", 383
	jmp     L08C8
L08BF:	lda     _digger_y_offset
	sec
	sbc     #$F1
	bvc     L0360
	eor     #$80
L0360:	asl     a
	ldx     #$00
	bcc     L08C0
	.dbg	line, "digger.c", 384
	dec     _digger_y
	.dbg	line, "digger.c", 385
L08C8:	lda     #$00
	sta     _digger_y_offset
	.dbg	line, "digger.c", 386
	lda     #$01
	ldy     #$00
	sta     (sp),y
	.dbg	line, "digger.c", 389
	ldx     #$00
L08C0:	lda     _digger_y
	jsr     shlax4
	clc
	adc     #$47
	bcc     L0369
	inx
L0369:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _digger_y_offset
	bpl     L036A
	dex
L036A:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	pla
	ldy     #$03
	sta     (sp),y
	.dbg	line, "digger.c", 390
	ldx     #$00
	lda     _digger_x
	jsr     shlax4
	clc
	adc     #$3C
	bcc     L036D
	inx
L036D:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _digger_x_offset
	bpl     L036E
	dex
L036E:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	ldy     #$01
	jsr     staxysp
	.dbg	line, "digger.c", 391
	cpx     #$01
	bcs     L036F
	.dbg	line, "digger.c", 392
	ldy     #$01
	lda     (sp),y
	sta     $D000
	.dbg	line, "digger.c", 393
	lda     $D010
	and     #$FE
	.dbg	line, "digger.c", 394
	jmp     L08BC
	.dbg	line, "digger.c", 395
L036F:	ldy     #$01
	lda     (sp),y
	sta     $D000
	.dbg	line, "digger.c", 396
	lda     $D010
	ora     #$01
L08BC:	sta     $D010
	.dbg	line, "digger.c", 398
	ldy     #$03
	lda     (sp),y
	sta     $D001
	.dbg	line, "digger.c", 399
	ldx     #$00
	lda     (sp,x)
	.dbg	line, "digger.c", 400
	jmp     incsp4
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ adjust_digger_pos (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_adjust_digger_pos: near

	.dbg	func, "adjust_digger_pos", "00", extern, "_adjust_digger_pos"
	.dbg	sym, "last_action", "00", auto, 1
	.dbg	sym, "action", "00", auto, 0

.segment	"CODE"

	.dbg	line, "digger.c", 403
	jsr     pusha
	.dbg	line, "digger.c", 404
	ldy     #$01
	lda     (sp),y
	cmp     #$12
	bne     L08EA
	dey
	lda     (sp),y
	cmp     #$09
	beq     L08CF
	cmp     #$0D
	bne     L0392
	.dbg	line, "digger.c", 405
L08CF:	lda     _digger_x_offset
	sec
	sbc     #$05
	bvs     L039B
	eor     #$80
L039B:	asl     a
	tya
	bcc     L08D1
	.dbg	line, "digger.c", 406
	lda     _digger_x
	clc
	adc     #$01
	sta     _digger_x
	.dbg	line, "digger.c", 408
	tya
L08D1:	sta     _digger_x_offset
	.dbg	line, "digger.c", 409
	jmp     incsp2
L0392:	iny
L08EA:	lda     (sp),y
	cmp     #$0A
	bne     L08EB
	dey
	lda     (sp),y
	.dbg	line, "digger.c", 410
	cmp     #$09
	beq     L08D7
	cmp     #$0D
	bne     L03A0
	.dbg	line, "digger.c", 411
L08D7:	lda     _digger_x_offset
	sec
	sbc     #$FC
	bvc     L03A9
	eor     #$80
L03A9:	asl     a
	tya
	bcc     L08D9
	.dbg	line, "digger.c", 412
	lda     _digger_x
	sec
	sbc     #$01
	sta     _digger_x
	.dbg	line, "digger.c", 414
	tya
L08D9:	sta     _digger_x_offset
	.dbg	line, "digger.c", 415
	jmp     incsp2
L03A0:	iny
L08EB:	lda     (sp),y
	cmp     #$09
	bne     L08EC
	dey
	lda     (sp),y
	.dbg	line, "digger.c", 416
	cmp     #$0A
	beq     L08DF
	cmp     #$12
	bne     L03AE
	.dbg	line, "digger.c", 417
L08DF:	lda     _digger_y_offset
	sec
	sbc     #$F7
	bvc     L03B7
	eor     #$80
L03B7:	asl     a
	tya
	bcc     L08C9
	.dbg	line, "digger.c", 418
	lda     _digger_y
	sec
	sbc     #$01
	.dbg	line, "digger.c", 421
	jmp     L08ED
L03AE:	iny
L08EC:	lda     (sp),y
	cmp     #$0D
	bne     L03BC
	dey
	lda     (sp),y
	.dbg	line, "digger.c", 422
	cmp     #$0A
	beq     L08E7
	cmp     #$12
	bne     L03BC
	.dbg	line, "digger.c", 423
L08E7:	lda     _digger_y_offset
	sec
	sbc     #$0A
	bvs     L03C5
	eor     #$80
L03C5:	asl     a
	tya
	bcc     L08C9
	.dbg	line, "digger.c", 424
	lda     _digger_y
	clc
	adc     #$01
L08ED:	sta     _digger_y
	.dbg	line, "digger.c", 426
	tya
L08C9:	sta     _digger_y_offset
	.dbg	line, "digger.c", 428
L03BC:	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ move_digger (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_move_digger: near

	.dbg	func, "move_digger", "00", extern, "_move_digger"
	.dbg	sym, "direction", "00", auto, 0
	.dbg	sym, "can_move", "00", auto, -1
	.dbg	sym, "real_step", "00", auto, -2
	.dbg	sym, "x_offset", "00", auto, -3
	.dbg	sym, "y_offset", "00", auto, -4

.segment	"CODE"

	.dbg	line, "digger.c", 433
	jsr     pusha
	.dbg	line, "digger.c", 434
	lda     #$00
	jsr     pusha
	.dbg	line, "digger.c", 435
	ldy     #$01
	lda     (sp),y
	cmp     #$09
	beq     L090A
	cmp     #$0A
	bne     L090B
L090A:	lda     _step
	eor     #$FF
	clc
	adc     #$01
	jmp     L090D
L090B:	lda     _step
L090D:	cmp     #$80
	jsr     pusha
	.dbg	line, "digger.c", 436
	ldx     #$00
	lda     _digger_x_offset
	bpl     L03D4
	dex
L03D4:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (sp,x)
	bpl     L03D5
	dex
L03D5:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	pla
	cmp     #$80
	jsr     pusha
	.dbg	line, "digger.c", 437
	ldx     #$00
	lda     _digger_y_offset
	bpl     L03D8
	dex
L03D8:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	ldy     #$01
	lda     (sp),y
	bpl     L03D9
	dex
L03D9:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	pla
	cmp     #$80
	jsr     pusha
	.dbg	line, "digger.c", 439
	ldy     #$04
	lda     (sp),y
	.dbg	line, "digger.c", 507
	cmp     #$09
	beq     L090E
	cmp     #$0A
	jeq     L0932
	cmp     #$0D
	jeq     L091F
	cmp     #$12
	jeq     L0950
	jmp     L03DD
	.dbg	line, "digger.c", 441
L090E:	lda     _digger_y
	jeq     L03DD
	cmp     #$01
	bne     L03E0
	ldy     #$00
	lda     (sp),y
	sec
	sbc     #$F1
	bvc     L03E5
	eor     #$80
L03E5:	jmi     L03DD
	jmp     L096F
	.dbg	line, "digger.c", 444
L03E0:	ldy     #$00
L096F:	lda     (sp),y
	sec
	sbc     #$F1
	bvc     L03EC
	eor     #$80
L03EC:	bpl     L0918
	ldx     #$00
	lda     _digger_y
	sec
	sbc     #$02
	bcs     L03EF
	dex
L03EF:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     _digger_x
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 445
L0918:	lda     _digger_y_offset
	bne     L091E
	tax
	lda     _digger_y
	sec
	sbc     #$01
	bcs     L03F6
	dex
L03F6:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     _digger_x
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 448
L091E:	lda     #$01
	ldy     #$03
	sta     (sp),y
	.dbg	line, "digger.c", 449
	ldy     #$00
	lda     (sp),y
	sta     _digger_y_offset
	.dbg	line, "digger.c", 450
	jmp     L03DD
	.dbg	line, "digger.c", 452
L091F:	lda     _digger_y
	cmp     #$09
	bne     L0921
	ldy     #$00
	lda     (sp),y
	tax
	jpl     L03DD
L0921:	lda     _digger_y
	cmp     #$08
	bne     L0401
	ldy     #$00
	lda     (sp),y
	sec
	sbc     #$10
	bvs     L040A
	eor     #$80
L040A:	jmi     L03DD
	jmp     L0970
	.dbg	line, "digger.c", 455
L0401:	ldy     #$00
L0970:	lda     (sp),y
	sec
	sbc     #$10
	bvs     L0411
	eor     #$80
L0411:	bpl     L092B
	ldx     #$00
	lda     _digger_y
	clc
	adc     #$02
	bcc     L0414
	inx
L0414:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     _digger_x
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 456
L092B:	lda     _digger_y_offset
	bne     L0931
	tax
	lda     _digger_y
	clc
	adc     #$01
	bcc     L041B
	inx
L041B:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldy     _digger_x
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 459
L0931:	lda     #$01
	ldy     #$03
	sta     (sp),y
	.dbg	line, "digger.c", 460
	ldy     #$00
	lda     (sp),y
	sta     _digger_y_offset
	.dbg	line, "digger.c", 461
	jmp     L03DD
	.dbg	line, "digger.c", 463
L0932:	lda     _digger_x
	jeq     L03DD
	cmp     #$01
	bne     L0939
	tay
	lda     (sp),y
	sec
	sbc     #$F1
	bvc     L042B
	eor     #$80
L042B:	jmi     L03DD
	.dbg	line, "digger.c", 466
L0939:	lda     _digger_x
	cmp     #$03
	jcc     L0944
	.dbg	line, "digger.c", 468
	ldy     #$01
	lda     (sp),y
	sec
	sbc     #$F1
	bvc     L0434
	eor     #$80
L0434:	bpl     L093D
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$02
	bcs     L0438
	dex
L0438:	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	bne     L093D
	.dbg	line, "digger.c", 469
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$03
	bcs     L043B
	dex
L043B:	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 470
L093D:	lda     _digger_x_offset
	jne     L094F
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$01
	bcs     L0442
	dex
L0442:	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	jne     L094F
	.dbg	line, "digger.c", 471
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$02
	jmp     L0985
	.dbg	line, "digger.c", 475
L0944:	lda     _digger_x
	cmp     #$02
	bne     L0948
	ldy     #$01
	lda     (sp),y
	.dbg	line, "digger.c", 476
	sec
	sbc     #$F1
	bvc     L044E
	eor     #$80
L044E:	bpl     L0948
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$02
	bcs     L0451
	dex
L0451:	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 477
L0948:	lda     _digger_x
	cmp     #$01
	bne     L094F
	lda     _digger_x_offset
	.dbg	line, "digger.c", 478
	bne     L094F
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	sec
	sbc     #$01
L0985:	bcs     L0458
	dex
L0458:	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 482
L094F:	lda     #$01
	ldy     #$03
	sta     (sp),y
	.dbg	line, "digger.c", 483
	tay
	lda     (sp),y
	jpl     L049B
	.dbg	line, "digger.c", 484
	jmp     L049B
	.dbg	line, "digger.c", 486
L0950:	lda     _digger_x
	cmp     #$0E
	jeq     L03DD
	cmp     #$0D
	bne     L0957
	ldy     #$01
	lda     (sp),y
	sec
	sbc     #$10
	bvs     L0467
	eor     #$80
L0467:	jmi     L03DD
	.dbg	line, "digger.c", 489
L0957:	lda     _digger_x
	cmp     #$0C
	jcs     L0962
	.dbg	line, "digger.c", 490
	ldy     #$01
	lda     (sp),y
	sec
	sbc     #$10
	bvs     L0470
	eor     #$80
L0470:	bpl     L095B
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$02
	bcc     L0904
	inx
	clc
L0904:	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	bne     L095B
	.dbg	line, "digger.c", 491
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$03
	bcc     L0905
	inx
	clc
L0905:	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	jeq     L03DD
	.dbg	line, "digger.c", 492
L095B:	lda     _digger_x_offset
	jne     L096D
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$01
	bcc     L0906
	inx
	clc
L0906:	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	jne     L096D
	.dbg	line, "digger.c", 493
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$02
	jmp     L0986
	.dbg	line, "digger.c", 497
L0962:	lda     _digger_x
	cmp     #$0C
	bne     L0966
	ldy     #$01
	lda     (sp),y
	.dbg	line, "digger.c", 498
	sec
	sbc     #$10
	bvs     L048A
	eor     #$80
L048A:	bpl     L0966
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$02
	bcc     L0908
	inx
	clc
L0908:	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	beq     L03DD
	.dbg	line, "digger.c", 499
L0966:	lda     _digger_x
	cmp     #$0D
	bne     L096D
	lda     _digger_x_offset
	.dbg	line, "digger.c", 500
	bne     L096D
	lda     _digger_y
	jsr     pusha0
	lda     #$0F
	jsr     tosmula0
	clc
	adc     #<(_map)
	sta     ptr1
	txa
	adc     #>(_map)
	sta     ptr1+1
	ldx     #$00
	lda     _digger_x
	clc
	adc     #$01
L0986:	bcc     L0909
	inx
	clc
L0909:	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$05
	beq     L03DD
	.dbg	line, "digger.c", 504
L096D:	lda     #$01
	ldy     #$03
	sta     (sp),y
	.dbg	line, "digger.c", 505
	tay
	lda     (sp),y
L049B:	sta     _digger_x_offset
	.dbg	line, "digger.c", 508
L03DD:	ldy     #$03
	lda     (sp),y
	beq     L096E
	.dbg	line, "digger.c", 509
	jsr     _place_digger
	ldy     #$03
	clc
	adc     (sp),y
	sta     (sp),y
	.dbg	line, "digger.c", 511
L096E:	ldx     #$00
	lda     (sp),y
	.dbg	line, "digger.c", 512
	jmp     incsp5
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ get_digger_sprite_num (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_get_digger_sprite_num: near

	.dbg	func, "get_digger_sprite_num", "00", extern, "_get_digger_sprite_num"
	.dbg	sym, "direction", "00", auto, 1
	.dbg	sym, "sprite_idx", "00", auto, 0

.segment	"CODE"

	.dbg	line, "digger.c", 535
	jsr     pusha
	.dbg	line, "digger.c", 536
	lda     _can_shoot
	beq     L04C3
	.dbg	line, "digger.c", 537
	ldy     #$00
	lda     (sp),y
	cmp     #$01
	bne     L04C5
	.dbg	line, "digger.c", 538
	iny
	ldx     #$00
	lda     (sp),y
	.dbg	line, "digger.c", 547
	cmp     #$09
	beq     L0987
	cmp     #$0A
	beq     L0989
	cmp     #$0D
	beq     L0988
	cmp     #$12
	beq     L098A
	jmp     incsp2
	.dbg	line, "digger.c", 540
L0987:	lda     #$82
	jmp     incsp2
	.dbg	line, "digger.c", 542
L0988:	lda     #$86
	jmp     incsp2
	.dbg	line, "digger.c", 544
L0989:	lda     #$84
	jmp     incsp2
	.dbg	line, "digger.c", 546
L098A:	lda     #$80
	jmp     incsp2
	.dbg	line, "digger.c", 549
L04C5:	iny
	ldx     #$00
	lda     (sp),y
	.dbg	line, "digger.c", 558
	cmp     #$09
	beq     L098B
	cmp     #$0A
	beq     L098D
	cmp     #$0D
	beq     L098C
	cmp     #$12
	beq     L098E
	jmp     incsp2
	.dbg	line, "digger.c", 551
L098B:	lda     #$83
	jmp     incsp2
	.dbg	line, "digger.c", 553
L098C:	lda     #$87
	jmp     incsp2
	.dbg	line, "digger.c", 555
L098D:	lda     #$85
	jmp     incsp2
	.dbg	line, "digger.c", 557
L098E:	lda     #$81
	jmp     incsp2
	.dbg	line, "digger.c", 561
L04C3:	tay
	lda     (sp),y
	cmp     #$01
	bne     L04E7
	.dbg	line, "digger.c", 562
	iny
	ldx     #$00
	lda     (sp),y
	.dbg	line, "digger.c", 571
	cmp     #$09
	beq     L098F
	cmp     #$0A
	beq     L0991
	cmp     #$0D
	beq     L0990
	cmp     #$12
	beq     L0992
	jmp     incsp2
	.dbg	line, "digger.c", 564
L098F:	lda     #$B4
	jmp     incsp2
	.dbg	line, "digger.c", 566
L0990:	lda     #$B8
	jmp     incsp2
	.dbg	line, "digger.c", 568
L0991:	lda     #$B6
	jmp     incsp2
	.dbg	line, "digger.c", 570
L0992:	lda     #$B2
	jmp     incsp2
	.dbg	line, "digger.c", 573
L04E7:	iny
	ldx     #$00
	lda     (sp),y
	.dbg	line, "digger.c", 582
	cmp     #$09
	beq     L0993
	cmp     #$0A
	beq     L0995
	cmp     #$0D
	beq     L0994
	cmp     #$12
	beq     L0996
	jmp     incsp2
	.dbg	line, "digger.c", 575
L0993:	lda     #$B5
	jmp     incsp2
	.dbg	line, "digger.c", 577
L0994:	lda     #$B9
	jmp     incsp2
	.dbg	line, "digger.c", 579
L0995:	lda     #$B7
	jmp     incsp2
	.dbg	line, "digger.c", 581
L0996:	lda     #$B3
	.dbg	line, "digger.c", 585
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ kill_digger_and_restart (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_kill_digger_and_restart: near

	.dbg	func, "kill_digger_and_restart", "00", extern, "_kill_digger_and_restart"
	.dbg	sym, "clk", "00", auto, -4
	.dbg	sym, "i", "00", auto, -5
	.dbg	sym, "cycle_counter", "00", auto, -6
	.dbg	sym, "last_color", "00", auto, -7
	.dbg	sym, "joystik_mask", "00", auto, -8
	.dbg	sym, "you_scored", "00", auto, -26
	.dbg	sym, "c", "00", auto, -27

.segment	"CODE"

	.dbg	line, "digger.c", 589
	jsr     decsp4
	lda     #$00
	jsr     pusha
	jsr     pusha
	jsr     decsp1
	jsr     pusha
	.dbg	line, "digger.c", 593
	ldy     #$13
	jsr     subysp
	lda     _invincibility
	.dbg	line, "digger.c", 594
	jne     L0586
	.dbg	line, "digger.c", 597
	tay
	jsr     _sid_reset
	.dbg	line, "digger.c", 598
	jsr     _clock
	ldy     #$17
	jsr     steaxysp
	.dbg	line, "digger.c", 599
	lda     #$BA
	sta     $83F8
	.dbg	line, "digger.c", 600
	lda     #$01
	sta     _sid_index
	.dbg	line, "digger.c", 601
	ldy     #$00
	jsr     _play_popcorn
	.dbg	line, "digger.c", 602
L051C:	jsr     _clock
	jsr     pusheax
	ldy     #$1E
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$01
	lda     #$2C
	jsr     tosadd0ax
	jsr     tosulteax
	bne     L051C
	.dbg	line, "digger.c", 603
	lda     #$00
	sta     _sid_index
	.dbg	line, "digger.c", 604
	tay
	jsr     _play_popcorn
	.dbg	line, "digger.c", 606
	lda     _unlimited_lives
	bne     L0521
	.dbg	line, "digger.c", 607
	lda     _num_lives
	sec
	sbc     #$01
	sta     _num_lives
	.dbg	line, "digger.c", 609
L0521:	jsr     _statusbar_redraw_lives
	.dbg	line, "digger.c", 611
	jsr     _clear_kbd_buffer
	.dbg	line, "digger.c", 613
	lda     _num_lives
	jne     L0526
	.dbg	line, "digger.c", 614
	jsr     _unload_wobble_gold_chars
	.dbg	line, "digger.c", 615
	lda     #$00
	sta     $D015
	.dbg	line, "digger.c", 616
	jsr     decsp4
	lda     sp
	ldx     sp+1
	clc
	adc     #$05
	bcc     L0531
	inx
L0531:	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #<(L0530)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0530)
	sta     (sp),y
	lda     _total_score+3
	sta     sreg+1
	lda     _total_score+2
	sta     sreg
	ldx     _total_score+1
	lda     _total_score
	jsr     pusheax
	ldy     #$08
	jsr     _sprintf
	.dbg	line, "digger.c", 617
	jsr     decsp3
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$06
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     #<(L0538)
	ldx     #>(L0538)
	jsr     _draw_string_at
	.dbg	line, "digger.c", 618
	jsr     decsp3
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$08
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     #<(L053E)
	ldx     #>(L053E)
	jsr     _draw_string_at
	.dbg	line, "digger.c", 619
	jsr     decsp3
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #<(L0544)
	ldx     #>(L0544)
	jsr     _draw_string_at
	.dbg	line, "digger.c", 620
	jsr     decsp3
	lda     #$03
	ldy     #$02
	sta     (sp),y
	lda     #$0C
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     sp
	ldx     sp+1
	clc
	adc     #$04
	bcc     L054B
	inx
L054B:	jsr     _draw_string_at
	.dbg	line, "digger.c", 621
	jsr     decsp3
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$0E
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     #<(L0550)
	ldx     #>(L0550)
	jsr     _draw_string_at
	.dbg	line, "digger.c", 622
	jsr     decsp3
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$10
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     #<(L0556)
	ldx     #>(L0556)
	jsr     _draw_string_at
	.dbg	line, "digger.c", 623
	jsr     decsp3
	lda     #$00
	ldy     #$02
	sta     (sp),y
	lda     #$12
	dey
	sta     (sp),y
	lda     #$0A
	dey
	sta     (sp),y
	lda     #<(L055C)
	ldx     #>(L055C)
	jsr     _draw_string_at
	.dbg	line, "digger.c", 626
L055E:	ldy     #$15
	lda     (sp),y
	clc
	adc     #$01
	sta     (sp),y
	.dbg	line, "digger.c", 627
	lda     (sp),y
	jsr     pusha0
	lda     #$3C
	jsr     tosumoda0
	cpx     #$00
	bne     L0563
	cmp     #$00
	bne     L0563
	.dbg	line, "digger.c", 628
	ldy     #$14
	lda     (sp),y
	cmp     #$01
	bne     L0998
	lda     #$07
	jmp     L099A
L0998:	lda     #$01
L099A:	sta     (sp),y
	.dbg	line, "digger.c", 629
	jsr     decsp3
	lda     #$04
	ldy     #$02
	sta     (sp),y
	lda     #$11
	dey
	sta     (sp),y
	ldy     #$17
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	lda     #<(L0571)
	ldx     #>(L0571)
	jsr     _draw_1x1_string_at
	.dbg	line, "digger.c", 631
L0563:	jsr     _cbm_k_getin
	ldy     #$00
	sta     (sp),y
	.dbg	line, "digger.c", 632
	lda     $DC00
	ldy     #$13
	sta     (sp),y
	.dbg	line, "digger.c", 633
	jsr     _poll_keyboard
	ldy     #$00
	sta     (sp),y
	.dbg	line, "digger.c", 634
	cmp     #$3C
	beq     L099B
	.dbg	line, "digger.c", 635
	ldy     #$13
	lda     (sp),y
	and     #$10
	bne     L055E
	jmp     L099C
	.dbg	line, "digger.c", 638
L099B:	tya
L099C:	sta     _current_level
	.dbg	line, "digger.c", 639
	jsr     _clear_screen
	.dbg	line, "digger.c", 640
	lda     #$01
	jsr     pusha
	lda     #$00
	.dbg	line, "digger.c", 641
	jmp     L0997
	.dbg	line, "digger.c", 642
L0526:	lda     #$00
	jsr     pusha
L0997:	jsr     _prepare_game
	.dbg	line, "digger.c", 644
L0586:	ldy     #$1B
	jmp     addysp
	.dbg	line

.endproc

